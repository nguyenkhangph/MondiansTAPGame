#include "./imports/stdlib.fc";

global cell user_coins;
global cell user_spins;

() init() {
    user_coins = begin_cell().store_uint(0, 32).end_cell();
    user_spins = begin_cell().store_uint(0, 32).end_cell();
    set_data(begin_cell().store_ref(user_coins).store_ref(user_spins).end_cell());
}

(tuple) load_data() {
    var ds = get_data().begin_parse();
    return tuple(ds.load_ref(), ds.load_ref());
}

() save_data(cell coins, cell spins) {
    set_data(begin_cell().store_ref(coins).store_ref(spins).end_cell());
}

() recv_tap_action(int user_id) {
    var (coins_cell, spins_cell) = load_data();
    var coins = coins_cell.load_uint(32) + 1;
    coins_cell = begin_cell().store_uint(coins, 32).end_cell();
    save_data(coins_cell, spins_cell);
}

() redeem_spins(int user_id, int spins_to_redeem) {
    var (coins_cell, spins_cell) = load_data();
    var current_spins = spins_cell.load_uint(32);
    if (current_spins >= spins_to_redeem) {
        spins_cell = begin_cell().store_uint(current_spins - spins_to_redeem, 32).end_cell();
        save_data(coins_cell, spins_cell);
    } else {
        throw(777);
    }
}

(int, int) get_user_data(int user_id) {
    var (coins_cell, spins_cell) = load_data();
    return (coins_cell.load_uint(32), spins_cell.load_uint(32));
}
